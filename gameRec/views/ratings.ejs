<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ratings</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
        }

        .rating-list {
            margin-bottom: 20px;
        }

        .rating-item {
            border: 1px solid #ccc;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
            position: relative;
        }

            .rating-item h3 {
                margin: 0;
            }

            .rating-item p {
                margin: 5px 0;
            }

            .rating-item button {
                position: absolute;
                right: 10px;
                top: 10px;
                font-size: 14px;
                cursor: pointer;
            }

        .form-container {
            border: 1px solid #ccc;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

            .form-container form {
                display: flex;
                flex-direction: column;
            }

                .form-container form input,
                .form-container form select,
                .form-container form button {
                    margin-bottom: 10px;
                    padding: 8px;
                    font-size: 16px;
                }
    </style>
</head>
<body>
    <div class="container">
        <h1>Ratings</h1>

        <div class="form-container">
            <h2>Add New Game</h2>
            <form id="addGameForm">
                <input type="text" name="game" placeholder="GameID" required>
                <button type="submit">Add Game</button>
            </form>
        </div>
        <div class="form-container">
            <h2>Add New Rating</h2>
            <form id="addRatingForm">
                <select name="game" id="gameSelect" required>
                    <option value="">Select Game</option>
                </select>
                <input type="number" name="rating" placeholder="Rating (1-5)" min="1" max="5" required>
                <button type="submit">Add Rating</button>
            </form>
        </div>

        <div class="rating-list" id="ratingList">
            <h2>Rating List</h2>
            <!-- Ratings will be populated here dynamically -->
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const userId = window.location.pathname.split('/')[2];
            fetchGames(userId);
            fetchRecommendations(userId);
        });

        function fetchGames(userId) {
            // Fetch games from the server to populate the game selection dropdown
            fetch(`/api/games/${userId}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Data:', data); // Log the data for debugging
                    const gameSelect = document.getElementById('gameSelect');
                    data.games.forEach(game => {
                        const option = document.createElement('option');
                        option.value = game.GameID;
                        option.textContent = game.Title;
                        gameSelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching games:', error));
        }

        function fetchRecommendations(userId) {
            // Fetch ratings from the server
            fetch(`/api/recommendation/${userId}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Data:', data); // Log the data for debugging
                    const ratingList = document.getElementById('ratingList');
                    ratingList.innerHTML = ''; // Clear existing content
                    data.forEach(rating => {
                        const ratingItem = document.createElement('div');
                        ratingItem.className = 'rating-item';
                        ratingItem.innerHTML = `
                            <h3>${rating.GameTitle}</h3>
                            <p>Rating: ${rating.Rating}</p>
                            <p>RecommendDate: ${rating.RecommendDate}</p>
                            <button onclick="editRating(${rating.id})">Edit</button>
                            <button onclick="deleteRating(${rating.id})">Delete</button>
                        `;
                        ratingList.appendChild(ratingItem);
                    });
                })
                .catch(error => console.error('Error fetching ratings:', error));
        }

        function editRating(ratingId) {
            // Logic to handle rating edit
            alert('Edit functionality not implemented yet.');
        }

        function deleteRating(ratingId) {
            fetch(`/api/recommendations/${ratingId}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                fetchRatings(); // Refresh ratings list after deletion
            })
            .catch(error => console.error('Error deleting rating:', error));
        }

        document.getElementById('addGameForm').addEventListener('submit', function(event) {
            const userId = window.location.pathname.split('/')[2];
            event.preventDefault();
            const formData = new FormData(this);
            const data = {
                userId: userId,
                gameId: formData.get('game'),
            };

            fetch(`/api/user/${userId}/games`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                fetchGames(); // Refresh game list after adding
            })
            .catch(error => console.error('Error adding rating:', error));
        });
        document.getElementById('addRatingForm').addEventListener('submit', function(event) {
            const userId = window.location.pathname.split('/')[2];
            event.preventDefault();
            const formData = new FormData(this);
            const data = {
                userId: userId,
                gameId: formData.get('game'),
                rating: formData.get('rating'),
                recommendDate: "2021-04-01",
            };

            fetch('/api/recommendation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                alert(data.message);
                fetchRecommendations(); // Refresh ratings list after adding
            })
            .catch(error => console.error('Error adding rating:', error));
        });
    </script>
</body>
</html>
